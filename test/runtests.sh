#!/usr/bin/env bash
#
# Test script to run all the tests in the directory of the tests. One awk-file
# where some command line options are defined shall be run for all tests in
# that directory with extension `test`. 
#
#   Extensions: 
#
#   *.test : contains $cmdline
#   *.ok   : expected output
#   *.out  : generated by test, stays if test fails
#   *.data : can be included in $cmdline
#
# The output of the configuration with the extension ".out" shall be compared 
# with a file of the same base name with `.ok` as extension. 
# Of the test cases, the first, non-empty, not '#'-commented line shall be used
# as command line options to the library. 
# If the results differ, this fact will be reported, and a file with extension
# `.out` will be left in the file system for examination.

project_dir="$(git rev-parse --show-toplevel)"
project="${project_dir##*/}"
export AWKPATH="..:$(gawk 'BEGIN{print ENVIRON["AWKPATH"]}')"
echo "Testrun $(date) of $project"

if [ -t 1 ]
then
    green=$'\e[32m'
    red=$'\e[31m'
    bold=$'\e[1m'
    reset=$'\e[0m'
fi

# No handicaps here.
failed=0
passed=0

fail() {
    failed=$(($failed+1))
    if [ $# -gt 0 ];
    then
        reason=": $@"
    fi
    echo " ${red}✘${reset} Failed: ${bold}${testname}${reset}${reason}"
}
pass() {
    passed=$(($passed+1))
    rm "${testname}.out" 2>&1
    echo " ${green}✔${reset} Passed: $testname"
}

# Advance to working directory, clear the field.
cd "${0%/*}" || exit 1
command rm -f *.out || exit 1

for testcase in *.test; do
    testname="${testcase%.*}"
    # Do the test.
    bash "${testname}.test" >"${testname}.out" 2>&1

    if ! [ -r "${testname}.ok" ]
    then
        fail "No output to compare to."
        continue
    fi
    if diff "${testname}.out" "${testname}.ok" >/dev/null 2>&1
    then
        pass
    else
        fail
    fi
done

echo "Total tests: $(($failed+$passed))"
echo "Failed: $failed"
echo "Passed: $passed"

(($failed==0)) && exit 0 || exit 1
