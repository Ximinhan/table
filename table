#!/usr/bin/gawk -E
#
# A small program to generate good looking tables from text data, 
# powered by all the field splitting magic that awk provides. Type
# `table --help` for usage details. 
#
# This is a user interface for the libtable.awk library, which can be
# used from other programs. 
#
# Depends on ngetopt.awk for command line option parsing. 
#
# Written by Joep van Delft, 2014

@include "ngetopt.awk"
@include "libtable.awk"

BEGIN {
    #opt_debug="y"
    regopt("short=s; long=style; flag=style; has_arg=yes; desc=Select output style.")
    regopt("short=d; long=debug; flag=debug; has_arg=no; desc=Output debugging stuff")
    regopt("short=h; long=help; flag=help; has_arg=no; desc=Show usage information")
    regopt("short=F; long=field-separator; flag=FS; has_arg=yes; desc=Sets the field separator")
    regopt("short=H; long=no-header; flag=header; has_arg=no; desc=Disable header")
    regopt("short=F; long=field-separator; flag=FS; has_arg=yes; desc=Sets the field separator")
    regopt("long=rst; flag=style; val=rst; has_arg=no; desc=Style ReStructuredText")
    regopt("long=psql; flag=style; val=psql; has_arg=no; desc=Style ReStructuredText")

    parseopt(opt)

    if (help == "yes") {
        usage()
        _assert_exit = 0
        exit
    }
}

{
    # Storing the records in a two-dimensional array `contents'. 
    # Unfortunately, the following does not work: 
    #
    # % awk '{split($0, t[NR])}' <<<"a bbbb cccccccc"
    # awk: cmd. line:1: (FILENAME=- FNR=1) fatal: split: second argument is not an array

    split($0, tmp)
    for (i=1; i<=length(tmp); i++)
        contents[NR][i] = tmp[i]
    delete tmp
}

END {
    printf make_table(contents)
}

